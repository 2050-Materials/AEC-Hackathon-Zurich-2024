<ResourceDictionary x:Class="TwentyFiftyMaterialsUI.MainWindowResources"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TwentyFiftyMaterialsUI">



    <!-- Window Style-->
    <SolidColorBrush x:Key="WindowNormalBackgroundBrush" Color="White" />
    <SolidColorBrush x:Key="WindowNormalBorderBrush" Color="#373737" />
    <SolidColorBrush x:Key="WindowTextForeground" Color="White" />

    <Style x:Key="WindowTemplateStyle" TargetType="{x:Type Window}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Background" Value="White"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Background="{StaticResource WindowNormalBackgroundBrush}">
                        <Border BorderThickness="1 0 1 1" 
                                        BorderBrush="{StaticResource WindowNormalBorderBrush}">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" Color="Gray" Direction="270" Opacity=".5" ShadowDepth="1"/>
                            </Border.Effect>
                        </Border>
                        <StackPanel x:Name="windowTab" MouseDown="windowTab_MouseDown">
                            <TextBlock  TextAlignment="Left" BaselineOffset="30"
                                            Height="30"
                                            FontSize="14"
                                            Foreground="{StaticResource WindowTextForeground}"
                                            Background="{StaticResource WindowNormalBorderBrush}">
                                <TextBlock.Effect>
                                    <DropShadowEffect BlurRadius="5" Color="Gray" Direction="270" Opacity=".5" ShadowDepth="1" />
                                </TextBlock.Effect>
                            </TextBlock>

                        </StackPanel>
                        <StackPanel Orientation="Horizontal"                                  
                                    HorizontalAlignment="Right"  
                                    VerticalAlignment="Top"  
                                    Margin="0,2,10,0" Height="25">

                            <Button x:Name="minimiseBtn" 
                                    Content="—"
                                    FontFamily="Tahoma"
                                    Width="25"
                                    Height="20"
                                    Margin="0 0 10 0" 
                                    Click="minimiseBtn_Click"
                                    Style="{DynamicResource ButtonTemplateStyle}">
                            </Button>

                            <Button x:Name="closeBtn" 
                                    Content="✕"
                                    FontFamily="Tahoma"
                                    Width="25"
                                    Height="20" 
                                    Click="closeBtn_Click"
                                    Style="{DynamicResource ButtonCloseTemplateStyle}">
                            </Button>

                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Margin="0,2,10,0" Height="25">
                            <Image Source="{TemplateBinding Icon}"
                                   Height="25"
                                   Width="25"
                                   Margin="2.5 0 0 0"/>
                            <TextBlock
                                    TextAlignment="Justify"
                                    Margin="5 3 0 0"
                                    Height="30"
                                    FontSize="14"
                                    Foreground="White"         
                                    Text="{TemplateBinding Title}"/>
                        </StackPanel>
                        <!-- here goes the content -->
                        <ContentPresenter  Grid.ColumnSpan="1" Margin="0,40,0,0" Grid.RowSpan="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End of Window Style-->

    <!-- Text Box Style-->
    <SolidColorBrush x:Key="TextBoxNormalBorderBrush" Color="#373737" />
    <SolidColorBrush x:Key="TextBoxActiveBorderBrush" Color="#FF2DAAE2" />
    <SolidColorBrush x:Key="TextBoxNormalBackgroundBrush" Color="#fff" />

    <!-- defining some colors to use in our template and style section -->
    <Color x:Key="ControlForeground">#181818</Color>
    <Color x:Key="ControlReadOnlyForeground">#383838</Color>
    <Color x:Key="ControlDisabledForeground">#686868</Color>

    <Color x:Key="ControlBackground">#fff</Color>
    <Color x:Key="ControlHoveredBackground">#fafafc</Color>
    <Color x:Key="ControlFocusedBackground">#fdfdff</Color>
    <Color x:Key="ControlReadOnlyBackground">#f2f2f4</Color>
    <Color x:Key="ControlDisabledBackground">#fff</Color>

    <Color x:Key="ControlBorder">#373737</Color>
    <Color x:Key="ControlHoveredBorder">#FF2DAAE2</Color>
    <Color x:Key="ControlFocusedBorder">#FF2DAAE2</Color>
    <Color x:Key="ControlReadOnlyBorder">#373737</Color>
    <Color x:Key="ControlDisabledBorder">#373737</Color>

    <!-- creating a control template for TextBox -->
    <ControlTemplate x:Key="TextBoxTemplateBase" TargetType="{x:Type TextBox}">
        <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
            <!-- managing visual states to change controls styles on different states -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.500"
                                             From="1" To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="hoverBorder"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.500"
                                             From="0" To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="hoverBorder"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlDisabledBackground}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlDisabledBorder}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ReadOnly">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlReadOnlyBackground}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="normalBorder"
                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlReadOnlyBorder}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.300"
                                             From="0" To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="focusBorder"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard>
                            <DoubleAnimation BeginTime="00:00:00.000" Duration="00:00:00.700"
                                             From="1" To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="focusBorder"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <!-- main border, styling the border-brush and background for Normal state -->
            <Border x:Name="normalBorder" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"/>

            <!-- styling border-brush and background-color for MouseOver state -->
            <Border x:Name="hoverBorder" Opacity="0"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{StaticResource ControlHoveredBorder}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource ControlHoveredBackground}"/>
                </Border.Background>
            </Border>

            <!-- styling border-brush and background-color for Focused state -->
            <Border x:Name="focusBorder" Opacity="0"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{StaticResource ControlFocusedBorder}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource ControlFocusedBackground}"/>
                </Border.Background>
            </Border>

            <!-- TextBox uses a ScrollViewer named PART_ContentHost as its content-presenter -->
            <ScrollViewer x:Name="PART_ContentHost"
                          Padding="{TemplateBinding Padding}"
                          BorderThickness="0" 
                          IsTabStop="False" 
                          Margin="2" 
                          Background="{x:Null}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          TextElement.Foreground="{TemplateBinding Foreground}"/>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ControlDisabledForeground}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ControlReadOnlyForeground}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- every TextBox with property Style="{StaticResource TextBoxBaseStyle}" will use this style -->
    <Style x:Key="TextBoxTemplateStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource ControlBackground}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource ControlForeground}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource ControlBorder}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource TextBoxTemplateBase}"/>
    </Style>
    <!-- End of Text Box Style-->

    <!-- ComboBox Style -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#373737" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#eee" />

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                        CornerRadius="0" BorderThickness="0, 0, 0, 1.2" 
                        Background="{StaticResource ComboBoxNormalBackgroundBrush}">
            </Border>

            <Border Grid.Column="1" Margin="0, 0, 0, 3" Name="ButtonBorder"
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                        CornerRadius="4" BorderThickness="0" 
                        Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
                        Data="M2,2 L0,2 L4,6 L8,2 L6,2 L4,4 z"
                        HorizontalAlignment="Center" Fill="#373737"
                        VerticalAlignment="Center" StrokeThickness="1" 
                        Height="6"  Stretch="Fill" Width="12" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="White"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF2DAAE2"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="White"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#eee"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="White"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxTemplateStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                                ClickMode="Press" Focusable="False"
                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Visibility="Hidden" Background="Transparent"
                                HorizontalAlignment="Left" VerticalAlignment="Center"
                                Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                                Focusable="False" AllowsTransparency="True"
                                IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                        MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                                            CornerRadius="0" BorderThickness="1,1,1,1" 
                                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" Color="Gray" Direction="270" Opacity=".5" ShadowDepth="1" />
                                    </Border.Effect>
                                </Border>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End of ComboBox -->

    <!-- Buttons Style -->
    <Style x:Key="ButtonTemplateStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#373737" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF2DAAE2" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="#373737" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCloseTemplateStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#373737" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F03030" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="#373737" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End of Buttons Style-->

</ResourceDictionary>
